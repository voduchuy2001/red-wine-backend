schemes:
    - http
    - https
securityDefinitions:
    Bearer:
        type: apiKey
        name: Authorization
        in: header
        description: >-
            Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345". #magic___^_^___line #magic___^_^___line
paths:
    /product/{id}:
        get:
            tags:
                - Product
            summary: Product detail
            produces:
                - application/json
            parameters:
                - name: id
                  in: path
                  description: Product ID
                  required: true
                  schema:
                      type: string
            responses:
                200:
                    description: An object with a product detail
                    content:
                        application/json:
                            schema:
                                $ref: "#/definitions/product"
                404:
                    description: Product not found
                500:
                    description: Internal Server Error

    /products:
        get:
            tags:
                - Product
            summary: Get all products
            produces:
                - application/json
            parameters:
                - name: page
                  in: query
                  description: Page number for pagination
                  required: false
                  schema:
                      type: integer
                      minimum: 1
                      default: 1
                - name: limit
                  in: query
                  description: Number of items per page
                  required: false
                  schema:
                      type: integer
                      minimum: 1
                      maximum: 100
                      default: 10
                - name: categoryIds
                  in: query
                  description: Comma-separated list of category IDs
                  required: false
                  schema:
                      type: array
                      items:
                          type: integer
                      collectionFormat: csv
            responses:
                200:
                    description: An array of products
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "#/definitions/product"

    /create-product:
        post:
            security:
                - Bearer: []
            tags:
                - Product
            summary: Create a new product
            produces:
                - application/json
            parameters:
                - in: body
                  name: body
                  description: New product details
                  required: true
                  schema:
                      $ref: "#/definitions/product"
            responses:
                200:
                    description: Product created successfully
                400:
                    description: Bad Request
                401:
                    description: Unauthorized
                500:
                    description: Internal Server Error

definitions:
    product:
        type: object
        properties:
            name:
                type: string
                description: Name of the product
                example: Lorem ipsum is placeholder text commonly used in the graphic
            price:
                type: number
                description: Price of the product
                example: 1000000
            description:
                type: string
                description: Description of the product
                example: Lorem ipsum is placeholder text commonly used in the graphic, print, and publishing industries for previewing layouts and visual mockups.
            categoryIds:
                type: array
                items:
                    type: integer
                description: List of category IDs
                example: [1, 2, 3, 4]
            content:
                type: string
                description: Content of the product
                example: Lorem ipsum is placeholder text commonly used in the graphic, print, and publishing industries for previewing layouts and visual mockups.
            status:
                type: string
                description: Status of the product (active, inactive, draft)
                example: active
            images:
                type: array
                items:
                    type: string
                    example: https://loremipsum.io/assets/images/lorem-ipsum-magazine-layout.jpg, https://loremipsum.io/assets/images/lorem-ipsum-magazine-layout.jpg
                description: List of image URLs
            order:
                type: integer
                description: Order of the product
                example: 1
            isFeatured:
                type: boolean
                example: true
                description: Whether the product is featured
            salePrice:
                type: number
                example: 9000000
                description: Sale price of the product
            length:
                type: number
                description: Length of the product
                example: 100
            width:
                type: number
                description: Width of the product
                example: 100
            height:
                type: number
                example: 100
                description: Height of the product
            weight:
                type: number
                example: 100
                description: Weight of the product
            barcode:
                type: string
                example: 848848883
                description: Barcode of the product
